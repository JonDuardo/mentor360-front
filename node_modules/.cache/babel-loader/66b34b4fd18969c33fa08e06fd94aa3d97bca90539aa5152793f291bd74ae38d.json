{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaoe\\\\OneDrive\\\\007 - Global Trainer\\\\Mentor 360\\\\Mentor 360 - Front End\\\\mentor360-front\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport ChatBubble from \"../components/ChatBubble\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alanAvatar = \"https://ui-avatars.com/api/?name=Alan+Fernandes&background=0AE68A&color=fff\"; // Placeholder\n\nexport default function ChatPage({\n  sessao_id,\n  user_id,\n  user_name\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [erro, setErro] = useState(\"\");\n  const [digitando, setDigitando] = useState(false);\n  const endRef = useRef(null);\n\n  // Auto-scroll para o fim da conversa\n  useEffect(() => {\n    var _endRef$current;\n    (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, digitando]);\n\n  // Carrega histórico da sessão ao abrir/mudar sessão\n  useEffect(() => {\n    if (!sessao_id) return;\n    setLoading(true);\n    fetch(`http://localhost:3000/historico/${sessao_id}`).then(res => res.json()).then(data => {\n      if (Array.isArray(data.mensagens)) {\n        setMessages(data.mensagens.map(msg => ({\n          name: msg.origem === \"usuario\" ? user_name : \"Alan\",\n          text: msg.texto_mensagem,\n          isUser: msg.origem === \"usuario\",\n          avatar: msg.origem === \"usuario\" ? undefined : alanAvatar\n        })));\n      } else {\n        setMessages([]);\n      }\n    }).catch(() => setErro(\"Erro ao carregar mensagens\")).finally(() => setLoading(false));\n  }, [sessao_id, user_name]);\n\n  // Envia mensagem do usuário e chama IA (Alan)\n  const sendMessage = async () => {\n    if (input.trim() === \"\" || !sessao_id || !user_id) return;\n    setErro(\"\");\n    // Mostra a mensagem do usuário imediatamente\n    setMessages(msgs => [...msgs, {\n      name: user_name,\n      text: input,\n      isUser: true\n    }]);\n    setInput(\"\");\n    setDigitando(true);\n    try {\n      // Salva mensagem do usuário no backend\n      await fetch(\"http://localhost:3000/mensagem\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessao_id,\n          user_id,\n          texto_mensagem: input,\n          origem: \"usuario\"\n        })\n      });\n\n      // Chama IA (Alan)\n      const resp = await fetch(\"http://localhost:3000/ia\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessao_id,\n          user_id,\n          mensagem: input\n        })\n      });\n      const data = await resp.json();\n      if (resp.ok && data.resposta) {\n        setMessages(msgs => [...msgs, {\n          name: \"Alan\",\n          text: data.resposta,\n          isUser: false,\n          avatar: alanAvatar\n        }]);\n      } else {\n        setMessages(msgs => [...msgs, {\n          name: \"Alan\",\n          text: \"Ocorreu um erro ao responder. Tente novamente.\",\n          isUser: false,\n          avatar: alanAvatar\n        }]);\n      }\n    } catch (err) {\n      setMessages(msgs => [...msgs, {\n        name: \"Alan\",\n        text: \"Erro ao conectar com o servidor.\",\n        isUser: false,\n        avatar: alanAvatar\n      }]);\n    } finally {\n      setDigitando(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-[70vh] bg-white rounded-2xl shadow-lg mt-8 max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-6\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400\",\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n        ...msg\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)), digitando && /*#__PURE__*/_jsxDEV(ChatBubble, {\n        text: \"Alan est\\xE1 digitando...\",\n        isUser: false,\n        name: \"Alan\",\n        avatar: alanAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t p-4 flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border border-emerald-200 rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400\",\n        placeholder: \"Digite sua mensagem...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        disabled: loading || digitando\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"bg-emerald-500 hover:bg-emerald-600 text-white rounded-xl px-4 py-2 font-medium transition\",\n        disabled: loading || !input.trim() || digitando,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-center\",\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"7jg6wyW5xfutU362Zi9fHirSXnA=\");\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useState","useRef","useEffect","ChatBubble","jsxDEV","_jsxDEV","alanAvatar","ChatPage","sessao_id","user_id","user_name","_s","messages","setMessages","input","setInput","loading","setLoading","erro","setErro","digitando","setDigitando","endRef","_endRef$current","current","scrollIntoView","behavior","fetch","then","res","json","data","Array","isArray","mensagens","map","msg","name","origem","text","texto_mensagem","isUser","avatar","undefined","catch","finally","sendMessage","trim","msgs","method","headers","body","JSON","stringify","resp","mensagem","ok","resposta","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","ref","type","placeholder","value","onChange","e","target","onKeyDown","key","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/joaoe/OneDrive/007 - Global Trainer/Mentor 360/Mentor 360 - Front End/mentor360-front/src/pages/ChatPage.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport ChatBubble from \"../components/ChatBubble\";\r\n\r\nconst alanAvatar = \"https://ui-avatars.com/api/?name=Alan+Fernandes&background=0AE68A&color=fff\"; // Placeholder\r\n\r\nexport default function ChatPage({ sessao_id, user_id, user_name }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [erro, setErro] = useState(\"\");\r\n  const [digitando, setDigitando] = useState(false);\r\n  const endRef = useRef(null);\r\n\r\n  // Auto-scroll para o fim da conversa\r\n  useEffect(() => {\r\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, digitando]);\r\n\r\n  // Carrega histórico da sessão ao abrir/mudar sessão\r\n  useEffect(() => {\r\n    if (!sessao_id) return;\r\n    setLoading(true);\r\n    fetch(`http://localhost:3000/historico/${sessao_id}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (Array.isArray(data.mensagens)) {\r\n          setMessages(\r\n            data.mensagens.map(msg => ({\r\n              name: msg.origem === \"usuario\" ? user_name : \"Alan\",\r\n              text: msg.texto_mensagem,\r\n              isUser: msg.origem === \"usuario\",\r\n              avatar: msg.origem === \"usuario\" ? undefined : alanAvatar,\r\n            }))\r\n          );\r\n        } else {\r\n          setMessages([]);\r\n        }\r\n      })\r\n      .catch(() => setErro(\"Erro ao carregar mensagens\"))\r\n      .finally(() => setLoading(false));\r\n  }, [sessao_id, user_name]);\r\n\r\n  // Envia mensagem do usuário e chama IA (Alan)\r\n  const sendMessage = async () => {\r\n    if (input.trim() === \"\" || !sessao_id || !user_id) return;\r\n    setErro(\"\");\r\n    // Mostra a mensagem do usuário imediatamente\r\n    setMessages(msgs => [\r\n      ...msgs,\r\n      { name: user_name, text: input, isUser: true }\r\n    ]);\r\n    setInput(\"\");\r\n    setDigitando(true);\r\n\r\n    try {\r\n      // Salva mensagem do usuário no backend\r\n      await fetch(\"http://localhost:3000/mensagem\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          sessao_id,\r\n          user_id,\r\n          texto_mensagem: input,\r\n          origem: \"usuario\"\r\n        })\r\n      });\r\n\r\n      // Chama IA (Alan)\r\n      const resp = await fetch(\"http://localhost:3000/ia\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          sessao_id,\r\n          user_id,\r\n          mensagem: input\r\n        })\r\n      });\r\n      const data = await resp.json();\r\n      if (resp.ok && data.resposta) {\r\n        setMessages(msgs => [\r\n          ...msgs,\r\n          {\r\n            name: \"Alan\",\r\n            text: data.resposta,\r\n            isUser: false,\r\n            avatar: alanAvatar,\r\n          }\r\n        ]);\r\n      } else {\r\n        setMessages(msgs => [\r\n          ...msgs,\r\n          {\r\n            name: \"Alan\",\r\n            text: \"Ocorreu um erro ao responder. Tente novamente.\",\r\n            isUser: false,\r\n            avatar: alanAvatar\r\n          }\r\n        ]);\r\n      }\r\n    } catch (err) {\r\n      setMessages(msgs => [\r\n        ...msgs,\r\n        {\r\n          name: \"Alan\",\r\n          text: \"Erro ao conectar com o servidor.\",\r\n          isUser: false,\r\n          avatar: alanAvatar\r\n        }\r\n      ]);\r\n    } finally {\r\n      setDigitando(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[70vh] bg-white rounded-2xl shadow-lg mt-8 max-w-2xl mx-auto\">\r\n      {/* Área de mensagens */}\r\n      <div className=\"flex-1 overflow-y-auto p-6\">\r\n        {loading && <div className=\"text-gray-400\">Carregando...</div>}\r\n        {messages.map((msg, idx) => (\r\n          <ChatBubble key={idx} {...msg} />\r\n        ))}\r\n        {digitando && (\r\n          <ChatBubble\r\n            text=\"Alan está digitando...\"\r\n            isUser={false}\r\n            name=\"Alan\"\r\n            avatar={alanAvatar}\r\n          />\r\n        )}\r\n        <div ref={endRef} />\r\n      </div>\r\n      {/* Input para nova mensagem */}\r\n      <div className=\"border-t p-4 flex items-center gap-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 border border-emerald-200 rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400\"\r\n          placeholder=\"Digite sua mensagem...\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          onKeyDown={e => e.key === \"Enter\" && sendMessage()}\r\n          disabled={loading || digitando}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          className=\"bg-emerald-500 hover:bg-emerald-600 text-white rounded-xl px-4 py-2 font-medium transition\"\r\n          disabled={loading || !input.trim() || digitando}\r\n        >\r\n          Enviar\r\n        </button>\r\n      </div>\r\n      {erro && <div className=\"text-red-500 text-center\">{erro}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}