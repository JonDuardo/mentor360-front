{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaoe\\\\OneDrive\\\\007 - Global Trainer\\\\Mentor 360\\\\Mentor 360 - Front End\\\\mentor360-front\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\n// ChatPage.js\nimport { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:3000\"; // fallback local (ajuste se preferir)\n\nexport default function ChatPage({\n  user_id: userIdProp,\n  user_name: userNameProp,\n  sessao_id: sessaoIdProp\n}) {\n  _s();\n  // Fonte do sessao_id: URL > prop > localStorage (inicial)\n  const {\n    sessaoId: sessaoIdFromUrl\n  } = useParams();\n  const initialSessaoId = sessaoIdFromUrl || sessaoIdProp || localStorage.getItem(\"sessao_id\") || \"\";\n\n  // Estado que pode mudar ao criar nova sessão\n  const [sessaoId, setSessaoId] = useState(initialSessaoId);\n\n  // Fonte do usuário: prop > localStorage\n  const user_id = userIdProp || localStorage.getItem(\"user_id\") || \"\";\n  const user_name = userNameProp || localStorage.getItem(\"user_name\") || \"Você\";\n  const [mensagens, setMensagens] = useState([]); // [{origem, texto_mensagem, data_mensagem}]\n  const [input, setInput] = useState(\"\");\n  const [enviando, setEnviando] = useState(false);\n  const [loadingSessao, setLoadingSessao] = useState(false);\n  const [erro, setErro] = useState(\"\");\n  const bottomRef = useRef(null);\n\n  // cria sessão automaticamente se não houver uma\n  useEffect(() => {\n    async function garantirSessao() {\n      if (!user_id) return; // sem usuário, não cria\n      if (sessaoId) return; // já existe\n\n      try {\n        var _data$sessao;\n        setLoadingSessao(true);\n        const res = await fetch(`${API_BASE_URL}/sessao`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id,\n            mensagem: \"Início da sessão\"\n          })\n        });\n        const data = await res.json();\n        if (!res.ok) throw new Error((data === null || data === void 0 ? void 0 : data.erro) || \"Erro ao registrar sessão.\");\n        const novoId = data === null || data === void 0 ? void 0 : (_data$sessao = data.sessao) === null || _data$sessao === void 0 ? void 0 : _data$sessao.id;\n        if (novoId) {\n          localStorage.setItem(\"sessao_id\", novoId);\n          setSessaoId(novoId);\n        } else {\n          throw new Error(\"Resposta sem sessao.id\");\n        }\n      } catch (e) {\n        setErro(e.message);\n      } finally {\n        setLoadingSessao(false);\n      }\n    }\n    garantirSessao();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user_id, sessaoId]);\n\n  // Scroll automático para o fim\n  useEffect(() => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [mensagens]);\n\n  // Carregar histórico ao abrir / quando mudar a sessão\n  useEffect(() => {\n    async function carregarHistorico() {\n      setErro(\"\");\n      if (!sessaoId) return;\n      try {\n        const res = await fetch(`${API_BASE_URL}/historico/${sessaoId}`);\n        const data = await res.json();\n        if (!res.ok) throw new Error((data === null || data === void 0 ? void 0 : data.error) || \"Falha ao carregar histórico.\");\n        const arr = Array.isArray(data === null || data === void 0 ? void 0 : data.mensagens) ? data.mensagens : [];\n        setMensagens(arr);\n      } catch (e) {\n        setErro(e.message);\n      }\n    }\n    carregarHistorico();\n  }, [sessaoId]);\n  async function handleEnviar(e) {\n    var _e$preventDefault;\n    e === null || e === void 0 ? void 0 : (_e$preventDefault = e.preventDefault) === null || _e$preventDefault === void 0 ? void 0 : _e$preventDefault.call(e);\n    setErro(\"\");\n    const texto = input.trim();\n    if (!texto || !user_id || !sessaoId) return;\n\n    // Otimismo: exibe a mensagem do usuário imediatamente\n    const novaMsgUsuario = {\n      origem: \"usuario\",\n      texto_mensagem: texto,\n      data_mensagem: new Date().toISOString(),\n      _tempId: Math.random().toString(36).slice(2)\n    };\n    setMensagens(prev => [...prev, novaMsgUsuario]);\n    setInput(\"\");\n    setEnviando(true);\n    try {\n      // 1) Salvar a mensagem no histórico\n      const resSave = await fetch(`${API_BASE_URL}/mensagem`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessao_id: sessaoId,\n          user_id,\n          texto_mensagem: texto,\n          origem: \"usuario\"\n        })\n      });\n      const dataSave = await resSave.json();\n      if (!resSave.ok) throw new Error((dataSave === null || dataSave === void 0 ? void 0 : dataSave.error) || \"Não foi possível salvar a mensagem.\");\n\n      // 2) Pedir resposta da IA\n      const resIa = await fetch(`${API_BASE_URL}/ia`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id,\n          sessao_id: sessaoId,\n          mensagem: texto\n        })\n      });\n      const dataIa = await resIa.json();\n      if (!resIa.ok) throw new Error((dataIa === null || dataIa === void 0 ? void 0 : dataIa.erro) || \"Falha ao obter resposta da IA.\");\n      const respostaBot = ((dataIa === null || dataIa === void 0 ? void 0 : dataIa.resposta) || \"\").trim();\n      if (respostaBot) {\n        setMensagens(prev => [...prev, {\n          origem: \"bot\",\n          texto_mensagem: respostaBot,\n          data_mensagem: new Date().toISOString()\n        }]);\n      }\n    } catch (e) {\n      // Em caso de erro, mostra uma “bolha” de erro do sistema\n      setMensagens(prev => [...prev, {\n        origem: \"sistema\",\n        texto_mensagem: `Erro: ${e.message}`,\n        data_mensagem: new Date().toISOString()\n      }]);\n      setErro(e.message);\n    } finally {\n      setEnviando(false);\n    }\n  }\n\n  // Encerrar sessão atual\n  async function encerrarSessao() {\n    if (!sessaoId) {\n      alert(\"Nenhuma sessão aberta.\");\n      return;\n    }\n    try {\n      setLoadingSessao(true);\n      const r = await fetch(`${API_BASE_URL}/finalizar-sessao`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessao_id: sessaoId\n        })\n      });\n      const j = await r.json();\n      if (!r.ok) throw new Error((j === null || j === void 0 ? void 0 : j.error) || \"Erro ao encerrar sessão.\");\n\n      // limpar local e UI\n      localStorage.removeItem(\"sessao_id\");\n      setSessaoId(\"\");\n      setMensagens(prev => [...prev, {\n        origem: \"sistema\",\n        texto_mensagem: \"Sessão encerrada.\",\n        data_mensagem: new Date().toISOString()\n      }]);\n      alert(\"Sessão encerrada com sucesso.\");\n    } catch (e) {\n      alert(`Erro: ${e.message}`);\n    } finally {\n      setLoadingSessao(false);\n    }\n  }\n\n  // Abrir nova sessão (encerra a anterior automaticamente no backend)\n  async function abrirNovaSessao() {\n    if (!user_id) return alert(\"Usuário não identificado.\");\n    try {\n      var _j$sessao;\n      setLoadingSessao(true);\n      const r = await fetch(`${API_BASE_URL}/nova-sessao`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id,\n          mensagem: \"Nova sessão\"\n        })\n      });\n      const j = await r.json();\n      if (!r.ok) throw new Error((j === null || j === void 0 ? void 0 : j.erro) || \"Erro ao abrir nova sessão.\");\n      const novoId = j === null || j === void 0 ? void 0 : (_j$sessao = j.sessao) === null || _j$sessao === void 0 ? void 0 : _j$sessao.id;\n      if (novoId) {\n        localStorage.setItem(\"sessao_id\", novoId);\n        setSessaoId(novoId);\n        setMensagens([]); // limpa histórico da tela\n        alert(\"Nova sessão aberta.\");\n      } else {\n        throw new Error(\"Resposta sem sessao.id\");\n      }\n    } catch (e) {\n      alert(`Erro: ${e.message}`);\n    } finally {\n      setLoadingSessao(false);\n    }\n  }\n\n  // UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto h-[calc(100vh-4rem)] flex flex-col p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"pb-3 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-semibold\",\n        children: \"Mentor Tr\\xEDade \\u2014 Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500 flex items-center gap-3 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Usu\\xE1rio: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 22\n          }, this), \" \\u2022 Sess\\xE3o: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: sessaoId || \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto flex items-center gap-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: encerrarSessao,\n            disabled: !sessaoId || loadingSessao,\n            className: \"text-sm px-3 py-1.5 rounded border border-gray-300 hover:bg-gray-50 disabled:opacity-60\",\n            title: \"Finaliza a sess\\xE3o atual\",\n            children: \"Encerrar sess\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: abrirNovaSessao,\n            disabled: !user_id || loadingSessao,\n            className: \"text-sm px-3 py-1.5 rounded bg-black text-white hover:opacity-90 disabled:opacity-60\",\n            title: \"Fecha a atual (se houver) e abre outra\",\n            children: \"Nova sess\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto py-4 space-y-3\",\n      children: [mensagens.map((m, idx) => {\n        const isUser = m.origem === \"usuario\";\n        const isBot = m.origem === \"bot\";\n        const align = isUser ? \"items-end\" : \"items-start\";\n        const bubble = isUser ? \"bg-blue-600 text-white\" : isBot ? \"bg-gray-100 text-gray-900\" : \"bg-yellow-100 text-yellow-900\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${align}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[80%] px-4 py-2 rounded-2xl ${bubble} whitespace-pre-wrap`,\n            children: m.texto_mensagem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bottomRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEnviar,\n      className: \"pt-3 border-t flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 border rounded px-3 py-2\",\n        placeholder: loadingSessao ? \"Criando sessão...\" : \"Escreva sua mensagem…\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        disabled: !sessaoId || !user_id || enviando || loadingSessao\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !input.trim() || enviando || !sessaoId || loadingSessao,\n        className: \"bg-black text-white px-4 py-2 rounded\",\n        children: enviando ? \"Enviando...\" : \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-sm mt-2\",\n      children: [\"Erro: \", erro]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"Z2JKlsC6Afv1KPLrAA1ZFZqwMX8=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useEffect","useRef","useState","useParams","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","ChatPage","user_id","userIdProp","user_name","userNameProp","sessao_id","sessaoIdProp","_s","sessaoId","sessaoIdFromUrl","initialSessaoId","localStorage","getItem","setSessaoId","mensagens","setMensagens","input","setInput","enviando","setEnviando","loadingSessao","setLoadingSessao","erro","setErro","bottomRef","garantirSessao","_data$sessao","res","fetch","method","headers","body","JSON","stringify","mensagem","data","json","ok","Error","novoId","sessao","id","setItem","e","message","_bottomRef$current","current","scrollIntoView","behavior","carregarHistorico","error","arr","Array","isArray","handleEnviar","_e$preventDefault","preventDefault","call","texto","trim","novaMsgUsuario","origem","texto_mensagem","data_mensagem","Date","toISOString","_tempId","Math","random","toString","slice","prev","resSave","dataSave","resIa","dataIa","respostaBot","resposta","encerrarSessao","alert","r","j","removeItem","abrirNovaSessao","_j$sessao","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","title","map","m","idx","isUser","isBot","align","bubble","ref","onSubmit","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/joaoe/OneDrive/007 - Global Trainer/Mentor 360/Mentor 360 - Front End/mentor360-front/src/pages/ChatPage.jsx"],"sourcesContent":["// ChatPage.js\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst API_BASE_URL =\r\n  process.env.REACT_APP_API_BASE_URL ||\r\n  \"http://localhost:3000\"; // fallback local (ajuste se preferir)\r\n\r\nexport default function ChatPage({\r\n  user_id: userIdProp,\r\n  user_name: userNameProp,\r\n  sessao_id: sessaoIdProp,\r\n}) {\r\n  // Fonte do sessao_id: URL > prop > localStorage (inicial)\r\n  const { sessaoId: sessaoIdFromUrl } = useParams();\r\n  const initialSessaoId =\r\n    sessaoIdFromUrl || sessaoIdProp || localStorage.getItem(\"sessao_id\") || \"\";\r\n\r\n  // Estado que pode mudar ao criar nova sessão\r\n  const [sessaoId, setSessaoId] = useState(initialSessaoId);\r\n\r\n  // Fonte do usuário: prop > localStorage\r\n  const user_id = userIdProp || localStorage.getItem(\"user_id\") || \"\";\r\n  const user_name = userNameProp || localStorage.getItem(\"user_name\") || \"Você\";\r\n\r\n  const [mensagens, setMensagens] = useState([]); // [{origem, texto_mensagem, data_mensagem}]\r\n  const [input, setInput] = useState(\"\");\r\n  const [enviando, setEnviando] = useState(false);\r\n  const [loadingSessao, setLoadingSessao] = useState(false);\r\n  const [erro, setErro] = useState(\"\");\r\n  const bottomRef = useRef(null);\r\n\r\n  // cria sessão automaticamente se não houver uma\r\n  useEffect(() => {\r\n    async function garantirSessao() {\r\n      if (!user_id) return; // sem usuário, não cria\r\n      if (sessaoId) return; // já existe\r\n\r\n      try {\r\n        setLoadingSessao(true);\r\n        const res = await fetch(`${API_BASE_URL}/sessao`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            user_id,\r\n            mensagem: \"Início da sessão\",\r\n          }),\r\n        });\r\n        const data = await res.json();\r\n        if (!res.ok) throw new Error(data?.erro || \"Erro ao registrar sessão.\");\r\n        const novoId = data?.sessao?.id;\r\n        if (novoId) {\r\n          localStorage.setItem(\"sessao_id\", novoId);\r\n          setSessaoId(novoId);\r\n        } else {\r\n          throw new Error(\"Resposta sem sessao.id\");\r\n        }\r\n      } catch (e) {\r\n        setErro(e.message);\r\n      } finally {\r\n        setLoadingSessao(false);\r\n      }\r\n    }\r\n    garantirSessao();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user_id, sessaoId]);\r\n\r\n  // Scroll automático para o fim\r\n  useEffect(() => {\r\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [mensagens]);\r\n\r\n  // Carregar histórico ao abrir / quando mudar a sessão\r\n  useEffect(() => {\r\n    async function carregarHistorico() {\r\n      setErro(\"\");\r\n      if (!sessaoId) return;\r\n      try {\r\n        const res = await fetch(`${API_BASE_URL}/historico/${sessaoId}`);\r\n        const data = await res.json();\r\n        if (!res.ok)\r\n          throw new Error(data?.error || \"Falha ao carregar histórico.\");\r\n        const arr = Array.isArray(data?.mensagens) ? data.mensagens : [];\r\n        setMensagens(arr);\r\n      } catch (e) {\r\n        setErro(e.message);\r\n      }\r\n    }\r\n    carregarHistorico();\r\n  }, [sessaoId]);\r\n\r\n  async function handleEnviar(e) {\r\n    e?.preventDefault?.();\r\n    setErro(\"\");\r\n\r\n    const texto = input.trim();\r\n    if (!texto || !user_id || !sessaoId) return;\r\n\r\n    // Otimismo: exibe a mensagem do usuário imediatamente\r\n    const novaMsgUsuario = {\r\n      origem: \"usuario\",\r\n      texto_mensagem: texto,\r\n      data_mensagem: new Date().toISOString(),\r\n      _tempId: Math.random().toString(36).slice(2),\r\n    };\r\n    setMensagens((prev) => [...prev, novaMsgUsuario]);\r\n    setInput(\"\");\r\n    setEnviando(true);\r\n\r\n    try {\r\n      // 1) Salvar a mensagem no histórico\r\n      const resSave = await fetch(`${API_BASE_URL}/mensagem`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          sessao_id: sessaoId,\r\n          user_id,\r\n          texto_mensagem: texto,\r\n          origem: \"usuario\",\r\n        }),\r\n      });\r\n      const dataSave = await resSave.json();\r\n      if (!resSave.ok)\r\n        throw new Error(dataSave?.error || \"Não foi possível salvar a mensagem.\");\r\n\r\n      // 2) Pedir resposta da IA\r\n      const resIa = await fetch(`${API_BASE_URL}/ia`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_id,\r\n          sessao_id: sessaoId,\r\n          mensagem: texto,\r\n        }),\r\n      });\r\n      const dataIa = await resIa.json();\r\n      if (!resIa.ok) throw new Error(dataIa?.erro || \"Falha ao obter resposta da IA.\");\r\n\r\n      const respostaBot = (dataIa?.resposta || \"\").trim();\r\n      if (respostaBot) {\r\n        setMensagens((prev) => [\r\n          ...prev,\r\n          {\r\n            origem: \"bot\",\r\n            texto_mensagem: respostaBot,\r\n            data_mensagem: new Date().toISOString(),\r\n          },\r\n        ]);\r\n      }\r\n    } catch (e) {\r\n      // Em caso de erro, mostra uma “bolha” de erro do sistema\r\n      setMensagens((prev) => [\r\n        ...prev,\r\n        {\r\n          origem: \"sistema\",\r\n          texto_mensagem: `Erro: ${e.message}`,\r\n          data_mensagem: new Date().toISOString(),\r\n        },\r\n      ]);\r\n      setErro(e.message);\r\n    } finally {\r\n      setEnviando(false);\r\n    }\r\n  }\r\n\r\n  // Encerrar sessão atual\r\n  async function encerrarSessao() {\r\n    if (!sessaoId) {\r\n      alert(\"Nenhuma sessão aberta.\");\r\n      return;\r\n    }\r\n    try {\r\n      setLoadingSessao(true);\r\n      const r = await fetch(`${API_BASE_URL}/finalizar-sessao`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ sessao_id: sessaoId }),\r\n      });\r\n      const j = await r.json();\r\n      if (!r.ok) throw new Error(j?.error || \"Erro ao encerrar sessão.\");\r\n\r\n      // limpar local e UI\r\n      localStorage.removeItem(\"sessao_id\");\r\n      setSessaoId(\"\");\r\n      setMensagens((prev) => [\r\n        ...prev,\r\n        {\r\n          origem: \"sistema\",\r\n          texto_mensagem: \"Sessão encerrada.\",\r\n          data_mensagem: new Date().toISOString(),\r\n        },\r\n      ]);\r\n      alert(\"Sessão encerrada com sucesso.\");\r\n    } catch (e) {\r\n      alert(`Erro: ${e.message}`);\r\n    } finally {\r\n      setLoadingSessao(false);\r\n    }\r\n  }\r\n\r\n  // Abrir nova sessão (encerra a anterior automaticamente no backend)\r\n  async function abrirNovaSessao() {\r\n    if (!user_id) return alert(\"Usuário não identificado.\");\r\n    try {\r\n      setLoadingSessao(true);\r\n      const r = await fetch(`${API_BASE_URL}/nova-sessao`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ user_id, mensagem: \"Nova sessão\" }),\r\n      });\r\n      const j = await r.json();\r\n      if (!r.ok) throw new Error(j?.erro || \"Erro ao abrir nova sessão.\");\r\n\r\n      const novoId = j?.sessao?.id;\r\n      if (novoId) {\r\n        localStorage.setItem(\"sessao_id\", novoId);\r\n        setSessaoId(novoId);\r\n        setMensagens([]); // limpa histórico da tela\r\n        alert(\"Nova sessão aberta.\");\r\n      } else {\r\n        throw new Error(\"Resposta sem sessao.id\");\r\n      }\r\n    } catch (e) {\r\n      alert(`Erro: ${e.message}`);\r\n    } finally {\r\n      setLoadingSessao(false);\r\n    }\r\n  }\r\n\r\n  // UI\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto h-[calc(100vh-4rem)] flex flex-col p-4\">\r\n      <header className=\"pb-3 border-b\">\r\n        <h1 className=\"text-xl font-semibold\">Mentor Tríade — Chat</h1>\r\n        <div className=\"text-sm text-gray-500 flex items-center gap-3 flex-wrap\">\r\n          <span>\r\n            Usuário: <b>{user_name}</b> • Sessão: <code>{sessaoId || \"-\"}</code>\r\n          </span>\r\n          <div className=\"ml-auto flex items-center gap-8\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={encerrarSessao}\r\n              disabled={!sessaoId || loadingSessao}\r\n              className=\"text-sm px-3 py-1.5 rounded border border-gray-300 hover:bg-gray-50 disabled:opacity-60\"\r\n              title=\"Finaliza a sessão atual\"\r\n            >\r\n              Encerrar sessão\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={abrirNovaSessao}\r\n              disabled={!user_id || loadingSessao}\r\n              className=\"text-sm px-3 py-1.5 rounded bg-black text-white hover:opacity-90 disabled:opacity-60\"\r\n              title=\"Fecha a atual (se houver) e abre outra\"\r\n            >\r\n              Nova sessão\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"flex-1 overflow-y-auto py-4 space-y-3\">\r\n        {mensagens.map((m, idx) => {\r\n          const isUser = m.origem === \"usuario\";\r\n          const isBot = m.origem === \"bot\";\r\n          const align = isUser ? \"items-end\" : \"items-start\";\r\n          const bubble = isUser\r\n            ? \"bg-blue-600 text-white\"\r\n            : isBot\r\n            ? \"bg-gray-100 text-gray-900\"\r\n            : \"bg-yellow-100 text-yellow-900\";\r\n\r\n          return (\r\n            <div key={idx} className={`flex ${align}`}>\r\n              <div className={`max-w-[80%] px-4 py-2 rounded-2xl ${bubble} whitespace-pre-wrap`}>\r\n                {m.texto_mensagem}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={bottomRef} />\r\n      </div>\r\n\r\n      <form onSubmit={handleEnviar} className=\"pt-3 border-t flex gap-2\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"flex-1 border rounded px-3 py-2\"\r\n          placeholder={\r\n            loadingSessao\r\n              ? \"Criando sessão...\"\r\n              : \"Escreva sua mensagem…\"\r\n          }\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          disabled={!sessaoId || !user_id || enviando || loadingSessao}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!input.trim() || enviando || !sessaoId || loadingSessao}\r\n          className=\"bg-black text-white px-4 py-2 rounded\"\r\n        >\r\n          {enviando ? \"Enviando...\" : \"Enviar\"}\r\n        </button>\r\n      </form>\r\n\r\n      {erro && <div className=\"text-red-600 text-sm mt-2\">Erro: {erro}</div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}